name: Deploy Lambda

on:
  push:
    branches:
      - main
  pull_request:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Configurar credenciais AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}

      - name: Instalar dependências necessárias
        run: sudo apt-get update && sudo apt-get install -y xz-utils zip

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Cache do Terraform
        uses: actions/cache@v3
        with:
          path: ~/.terraform.d
          key: terraform-${{ runner.os }}-${{ hashFiles('src/infra/**/*.tf') }}
          restore-keys: terraform-${{ runner.os }}-

      - name: Deploy - Infra basica terraform
        working-directory: ./src/infra/
        run: |
          terraform -chdir='./tfstate' init
          terraform -chdir='./tfstate' plan -out=plan_tfstate
          terraform -chdir='./tfstate' apply -auto-approve plan_tfstate

      - name: Deploy - Infra compartilhada
        working-directory: ./src/infra/
        run: |
          terraform -chdir='./shared' init
          terraform -chdir='./shared' plan -out=plan_shared
          terraform -chdir='./shared' apply -auto-approve plan_shared

      - name: Construir pacote de implantação
        run: |
          set -e
          make -C ./src/lambda-video-processing build
          if [ ! -f ./src/lambda-video-processing/deployment_package.zip ]; then
            echo "Arquivo deployment_package.zip não encontrado!";
            exit 1;
          fi

      - name: Baixar e enviar FFmpeg para o S3
        run: make -C ./src/lambda-video-processing build-ffmpeg-layer

      - name: Deploy - Lambda video-processing
        working-directory: ./src/infra/
        run: |
          terraform -chdir='./lambda-video-processing' init
          terraform -chdir='./lambda-video-processing' plan -out=plan_lambda-video-processing
          terraform -chdir='./lambda-video-processing' apply -auto-approve plan_lambda-video-processing

      - name: Notificar sucesso do deploy
        if: success()
        run: echo "Deploy concluído com sucesso para LambdaProcessadorVideos em $AWS_REGION!"

      - name: Notificar falha do deploy
        if: failure()
        run: echo "Falha no deploy da LambdaProcessadorVideos. Verifique os logs."