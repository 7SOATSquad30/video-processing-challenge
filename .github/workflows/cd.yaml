name: Deployment

on:
  push:
    branches:
      - main

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Configurar credenciais AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}

      - name: Instalar dependências necessárias
        run: sudo apt-get update && sudo apt-get install -y xz-utils zip

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Cache do Terraform
        uses: actions/cache@v3
        with:
          path: ~/.terraform.d
          key: terraform-${{ runner.os }}-${{ hashFiles('src/infra/**/*.tf') }}
          restore-keys: terraform-${{ runner.os }}-

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.17.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Build
        run: make build

      - name: Deploy
        working-directory: ./src/infra/shared
        run: |
          terraform init
          terraform plan -out=plan_shared
          terraform apply -auto-approve plan_shared \
            -var "ses_email_address=${{ secrets.SES_EMAIL_ADDRESS }}" \
            -var "ses_domain_identity_name=${{ secrets.SES_DOMAIN_IDENTITY_NAME }}"

      - name: Notificar sucesso do deploy
        if: success()
        run: echo "Deploy concluído com sucesso para LambdaProcessadorVideos em $AWS_REGION!"

      - name: Notificar falha do deploy
        if: failure()
        run: echo "Falha no deploy da LambdaProcessadorVideos. Verifique os logs."